# Repo: FirelyTeam/firely-serverless-validator
# File: build/azure-pipelines.yml

trigger:
  branches:
    include:
    - develop
    - release/*
    - hotfix/*
    - refs/tags/v*
  batch: True

name: $(date:yyyyMMdd)$(rev:.r)

variables:
  NET_CORE_SDK: 5.0.x
  isTagBranch: $[startswith(variables['Build.SourceBranch'], 'refs/tags/v')]
  solutionName: ./Firely.Serverless.Validator.sln
  solutionConfiguration: Release
  
pool:
  vmImage: 'windows-latest'

resources:
  repositories:
  - repository: self
    type: git
    ref: develop

stages:
- stage: build
  displayName: Build
  jobs:
  - job: BuildTestPack
    displayName: Build, Test and Pack
    timeoutInMinutes: 120
    cancelTimeoutInMinutes: 1
    steps:
    - checkout: self
      clean: true
      submodules: true
      fetchDepth: 100
    - task: UseDotNet@2
      displayName: Use .NET Core sdk $(NET_CORE_SDK)
      inputs:
        version: $(NET_CORE_SDK)
    - task: PowerShell@2
      displayName: Retrieve current version
      inputs:
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/RetrieveVersion.ps1
    - task: PowerShell@2
      displayName: Setting version
      inputs:
        targetType: filePath
        filePath: $(Build.SourcesDirectory)/build/UpdateVersion.ps1
        arguments: -newVersion $(CurrentVersion) -suffix $(CurrentSuffix)-$(Build.BuildNumber)
    - task: NuGetAuthenticate@0
      inputs:
        nuGetServiceConnections: SimplifierFeedCredentials, GitHubPackageGetFeed
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: $(solutionName)
        feedsToUse: config
        nugetConfigPath: build/nuget.config
        verbosityRestore: Minimal
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(solutionName)
        arguments: --configuration $(solutionConfiguration) --no-restore
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
    - task: DotNetCoreCLI@2
      displayName: Pack
      inputs:
        command: pack
        searchPatternPack: 'src/**/*.csproj'
        configurationToPack: $(solutionConfiguration)
        nobuild: true
        verbosityPack: Normal
    - publish: $(Build.ArtifactStagingDirectory)
      artifact: NuGetPackages
      displayName: Publish

      
- stage: deploy_gitHub
  displayName: Deploy packages to GitHub
  dependsOn: build
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # not a PR
  jobs:
  - deployment: github
    displayName: GitHub Packages
    environment: GitHub
    variables:
      GITHUB_PACKAGES_APIKEY: $(GitHubPackagesAPIKey)      # key is set in UI of Azure Devops
    strategy:
      runOnce:
        deploy:
            steps:
            - download: none
            - task: DownloadPipelineArtifact@2
              inputs:
                source: current
                artifact: NuGetPackages
                path: $(Build.ArtifactStagingDirectory)\NuGetPackages
            - task: NuGetToolInstaller@1
              inputs:
                versionSpec: 5.x
            - task: DotNetCoreCLI@2
              displayName: GitHub push
              inputs:
                command: custom
                custom: nuget
                arguments: >
                  push $(Build.ArtifactStagingDirectory)\NuGetPackages\*.nupkg
                  --source https://nuget.pkg.github.com/FirelyTeam/index.json
                  --api-key $(GITHUB_PACKAGES_APIKEY)