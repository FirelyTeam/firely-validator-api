# Repo: FirelyTeam/firely-validator-api
# File: build/azure-pipelines.yml

trigger:
  branches:
    include:
    - develop
    - release/*
    - hotfix/*
    - refs/tags/v*
  batch: True

name: $(date:yyyyMMdd)$(rev:.r)

variables:
  - group: CodeSigning
  - group: APIKeys
  - template: variables.yml 
  
pool: 
  vmImage: $(vmImage)

resources:
  repositories:
  - repository: templates
    type: github
    name: FirelyTeam/azure-pipeline-templates
    endpoint: FirelyTeam 

stages:
- stage: build
  jobs:
  - ${{ if not(startswith(variables['Build.SourceBranch'], 'refs/tags/v')) }}:  # 'normal' build 
    - template: templates/build.yml  # Template reference
      parameters:
        dotNetCoreVersion: $(DOTNET_CORE_SDK)
        checkoutSubmodules: true
        useVersionSuffix: true
        propsFile: 'firely-validator-api.props'
        packageArtifacts: true
        restoreDependencies: true
        nuGetServiceConnections: GitHubPackageGetFeed
        nuGetSources: --source https://nuget.pkg.github.com/FirelyTeam/index.json
        pool: 
          vmImage: $(vmImage)
    
  - ${{ if startswith(variables['Build.SourceBranch'], 'refs/tags/v') }}:  # release mode
    - template: templates/build.yml  # Template reference
      parameters:
        dotNetCoreVersion: $(DOTNET_CORE_SDK)
        checkoutSubmodules: true
        useVersionSuffix: false
        propsFile: 'firely-validator-api.props'
        packageArtifacts: true
        restoreDependencies: true
        nuGetServiceConnections: GitHubPackageGetFeed
        nuGetSources: --source https://nuget.pkg.github.com/FirelyTeam/index.json
        pool: 
          vmImage: $(vmImage)

      
# - stage: deploy_gitHub
#   displayName: Deploy packages to GitHub
#   dependsOn: build
#   condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest')) # not a PR
#   jobs:
#   - deployment: github
#     displayName: GitHub Packages
#     environment: GitHub
#     strategy:
#       runOnce:
#         deploy:
#             steps:
#             - template: push-nuget-package.yml@templates  # Template reference
#               parameters:
#                 artifact: NuGetPackages
#                 source: https://nuget.pkg.github.com/FirelyTeam/index.json
#                 apiKey: $(GITHUB_PACKAGES_APIKEY)

- stage: deployToNuget
  dependsOn: deploy_gitHub
  displayName: Deploy packages to NuGet
  condition: and(succeeded(), startswith(variables['Build.SourceBranch'], 'refs/tags/v'))
  jobs:
  - deployment: NuGet    
    displayName: Publish to Nuget      
    environment: NuGet
    strategy:
      runOnce:
        deploy:
          steps:
          - template: push-nuget-package.yml@templates
            parameters:
              artifact: 'NuGetPackages'
              source: https://api.nuget.org/v3/index.json
              apiKey: $(NUGET_APIKEY)